<div>
<tal:block replace="">
<!--

Creative Commons has made the contents of this file
available under a CC-GNU-GPL license:

 http://creativecommons.org/licenses/GPL/2.0/

 A copy of the full license can be found as part of this
 distribution in the file LICENSE.TXT

You may use the ccHost software in accordance with the
terms of that license. You agree that you are solely 
responsible for your use of the ccHost software and you
represent and warrant to Creative Commons that your use
of the ccHost software will comply with the CC-GNU-GPL.

$Header$

-->
</tal:block>

<!-- to view this file from the browser use /your-root-domain/media/viewfile/dev_notes.xml URL -->

<h1>Some developer tips and how-tos</h1>

<pre style="font-style:Courier New, courier, serif;font-size: 12px">
<b>Load Sequence</b>

The system will first load all the relevant files in the <b>cclib</b> directory. 

It will then look for all '.php' extension files in <b>ccextras</b>. (The 
ccextras directory name can be usurped by setting an environment variable 
called CC_EXTRAS_DIR. In Apache environments this can be done by adding
the following line to .htacces:

SetEnv CC_EXTRAS_DIR custom-extras

If you still want to load ccextras you can write code to traverse that
directory and do a 'require_once' on all files with a 'php' extension.

ccHost is an event based system and extensibility comes from 'registering'
then 'responding' or 'handling' events that occur at various times.

It is very important that during the 'include' process no significant
code be executed. All initialization code should be done in response
to the CC_EVENT_APP_INIT event after the system has had a chance to 
configure itself and the user is known.

A search of the directory structure for 'CCEvents::Invoke' will give you
a comprensive idea of what the events are and when they are triggered.

To write extensions to the system you should follow the lead of the 
modules in <b>ccextras</b>.

<b>Internationalization</b>

Translators should see the <b>ccextras/cc-lang.inc</b> for 
instructions on how to create a locale specific installation.

Developers: Wrap any string that the user sees in a call to <b>cct()</b>. 

This should be done before any calls to <b>sprintf</b>. e.g.
sprintf(cct("Hello %s"),<i>user_name_variable</i>)).

</pre>
</div>